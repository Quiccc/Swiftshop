// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Swiftshop.Database;

#nullable disable

namespace Swiftshop.Migrations
{
    [DbContext(typeof(SwiftshopDbContext))]
    [Migration("20230817134604_SwiftshopMigration")]
    partial class SwiftshopMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Swiftshop.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_Category");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Swiftshop.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("subcategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Item");

                    b.HasIndex("subcategoryId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Swiftshop.Models.ShoppingList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_ShoppingList");

                    b.HasIndex("userId");

                    b.ToTable("ShoppingLists");
                });

            modelBuilder.Entity("Swiftshop.Models.ShoppingListContent", b =>
                {
                    b.Property<int>("listId")
                        .HasColumnType("int");

                    b.Property<int>("itemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("listId", "itemId")
                        .HasName("CK_ListContent");

                    b.HasIndex("itemId");

                    b.ToTable("ShoppingListContents");
                });

            modelBuilder.Entity("Swiftshop.Models.Subcategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("categoryId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Subcategory");

                    b.HasIndex("categoryId");

                    b.ToTable("Subcategories");
                });

            modelBuilder.Entity("Swiftshop.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_User");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Swiftshop.Models.Item", b =>
                {
                    b.HasOne("Swiftshop.Models.Subcategory", "Subcategory")
                        .WithMany()
                        .HasForeignKey("subcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subcategory");
                });

            modelBuilder.Entity("Swiftshop.Models.ShoppingList", b =>
                {
                    b.HasOne("Swiftshop.Models.User", "User")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ShoppingListToUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Swiftshop.Models.ShoppingListContent", b =>
                {
                    b.HasOne("Swiftshop.Models.Item", "Item")
                        .WithMany("listContents")
                        .HasForeignKey("itemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Swiftshop.Models.ShoppingList", "List")
                        .WithMany("listContents")
                        .HasForeignKey("listId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("List");
                });

            modelBuilder.Entity("Swiftshop.Models.Subcategory", b =>
                {
                    b.HasOne("Swiftshop.Models.Category", "Category")
                        .WithMany("Subcategories")
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_SubcategoryToCategory");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Swiftshop.Models.Category", b =>
                {
                    b.Navigation("Subcategories");
                });

            modelBuilder.Entity("Swiftshop.Models.Item", b =>
                {
                    b.Navigation("listContents");
                });

            modelBuilder.Entity("Swiftshop.Models.ShoppingList", b =>
                {
                    b.Navigation("listContents");
                });

            modelBuilder.Entity("Swiftshop.Models.User", b =>
                {
                    b.Navigation("ShoppingLists");
                });
#pragma warning restore 612, 618
        }
    }
}
